# docker-compose.yml
version: '3.8'

services:
  gateway:
    image: nginx:latest
    container_name: nginx-gateway
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./infra/gateway/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    environment:
      DB_HOST: auth-service-db
      DB_DATABASE: auth-service
      DB_USERNAME: root
      DB_PASSWORD: root 
    volumes:
      - ./auth-service:/var/www/html
    networks:
      - laravel
    ports:
      - "8004:8000"  

  note-service:
    build:
      context: ./note-taking-service
      dockerfile: Dockerfile
    container_name: note-service
    restart: unless-stopped
    environment:
      DB_HOST: note-service-db
      DB_DATABASE: note-service
      DB_USERNAME: root
      DB_PASSWORD: root
    volumes:
      - ./note-taking-service:/var/www/html
    networks:
      - laravel
    ports:
      - "8005:8000"

  auth-service-db:
    image: mysql:8.0
    container_name: mysql-service1
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: auth-service
      MYSQL_USER: auth-service-user
      MYSQL_PASSWORD: auth-service-password
    networks:
      - laravel

  note-service-db:
    image: mysql:8.0
    container_name: mysql-service2
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: note-service
      MYSQL_USER: note-service-user
      MYSQL_PASSWORD: note-service-password
    networks:
      - laravel
      
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - laravel  
  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    networks:
      - laravel





volumes:
  db1_data:

networks:
  laravel:
    driver: bridge
